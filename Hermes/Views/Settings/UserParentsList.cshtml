@using Hermes.DAL;
@using Hermes.Models;

@{
    ViewBag.Title = "Λογαριασμοί γονέων";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #0026ff">
        <font style="color:#00008b;float:left;font-family:'Segoe UI'">Λογαριασμοί αιτούντων γονέων</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">
        @Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-success" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>    
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">
        @Html.ActionLink("Εκτύπωση", "ParentAccountsPrint", "Settings", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })
    </span>
</div>
<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<UserParentEditViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.Bound(c => c.USERNAME).Groupable(false).Width(40)
                .ClientFooterTemplate("Πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.PASSWORD).Groupable(false).Width(30);
            columns.Bound(c => c.AFM).Groupable(false).Width(30);
            columns.ForeignKey(f => f.PARENT_TYPE, (IEnumerable<PARENT_TYPES>)ViewData["parent_types"], "PARENT_TYPEID", "PARENT_TYPETEXT").Width(20);
            columns.Bound(c => c.CREATEDATE).Width(35).Format("{0:dd/MM/yyyy}");
        })
        .HtmlAttributes(new { style = "display:block;font-size:14px" })
        .Filterable()
        .Groupable()
        .Selectable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(300))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(false)
            .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.USER_ID))
            .Read(read => read.Action("UserParent_Read", "Settings"))
            .Aggregates(a =>
            {
                a.Add(p => p.USERNAME).Count();
            })
        )
        .Events(events => events.Change("change"))
    )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<ParentAccountInfoViewModel>()
        .Name("Child")
        .Columns(columns =>
        {
            columns.Bound(m => m.PARENT_FULLNAME).Width(40);
            columns.Bound(m => m.PARENT_AFM).Width(20);
            columns.Bound(m => m.PARENT_AMKA).Width(20);
            columns.Bound(m => m.PARENT_PHONEHOME).Width(20);
            columns.Bound(m => m.PARENT_PHONEMOBILE).Width(20);
            columns.Bound(m => m.PARENT_PHONEWORK).Width(20);
        })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(80))
        .HtmlAttributes(new { style = "display:block;font-size:14px" })        
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.USER_ID);
        })
        .Read(read => read.Action("UserParentInfo_Read", "Settings").Data("data"))
    ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { userId: dataItem.USER_ID };
        }
        else {
            return { userId: 0 };
        }
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var userID = dataItem.USER_ID;

        $("#Child").data("kendoGrid").dataSource.read({ userId: userID });
        $("#Child").css("display", "block");
    }

</script>





