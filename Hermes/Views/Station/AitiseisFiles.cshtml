@using Hermes.DAL;
@using Hermes.Models;

@{
    ViewBag.Title = "Αιτήσεις-Δικαιολογητικά";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<div class="page-header" style="margin:10px 30px 5px 30px">
    <div style="margin-bottom:5px">
        <span style="margin:5px 60px 5px 30px">
            <font style="color:#00008b;float:left;font-family:'Segoe UI'">
                @Html.Label("", "Αιτήσεις προσκλήσεων και δικαιολογητικά", new { @style = "font-size:15px;font-style:normal" })
            </font>
        </span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-info" style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>
</div>

<div class="body-content" style="margin:5px 30px 5px 30px;background-color:#4682B4;padding:4px 4px 4px 4px">
    <label style="margin-left:5px;font-size:13px;font-weight:bold;color:white">Επιλογή Πρόσκλησης : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlprosklisi")
        .DataTextField("PROTOCOL")
        .DataValueField("PROSKLISI_ID")
        .HtmlAttributes(new { style = "width:260px;font-size:12px;font-weight:bold" })
        .OptionLabel("Επιλογή ...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetProsklisis", "Station"); }); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
    <label style="margin-left:10px;font-size:12px;font-weight:bold;color:white;font-style:italic">Επιλέξτε γραμμή στο άνω πλέγμα για προβολή των αντίστοιχων ανεβασμένων αρχείων.</label>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<AitiseisListViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.Bound(c => c.AITISI_PROTOCOL).Width(20).Filterable(false).Groupable(false);
            columns.Bound(c => c.CHILD_FULLNAME).Width(44).Groupable(false)
                .ClientFooterTemplate("Ολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.BIRTHDATE).Width(22).Filterable(false).Groupable(false);
            columns.Bound(c => c.AGE).Width(16).Filterable(false).Groupable(false);
            columns.ForeignKey(f => f.AGE_CATEGORY, (IEnumerable<AGE_CLASSES>)ViewData["age_classes"], "CATEGORY_ID", "CATEGORY_TEXT").Width(24);
            columns.Bound(c => c.MORIA_TOTAL).Width(18);
            columns.Bound(c => c.RANKING_TEXT).Width(25);
            columns.Bound(c => c.PARENTS_ID).Hidden();
        })
            .HtmlAttributes(new { style = "font-size:14px" })
            .Filterable()
            .Groupable()
            .Selectable()
            .Scrollable(scr => scr.Height(300))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(true)
            .Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.AITISI_ID);
            })
            .Aggregates(a =>
            {
                a.Add(p => p.CHILD_FULLNAME).Count();
            })
            .Read(read => read.Action("AitiseisProsklisi_Read", "Station").Data("data1"))
        )
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Events(events => events.Change("change"))
    )
</div>

<div id="aitisi-files" class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<sqlUploadedFilesViewModel>()
        .Name("Child")
        .AutoBind(true)
        .HtmlAttributes(new { style = "font-size:14px" })
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(300))
        .Columns(columns =>
        {
            columns.Bound(c => c.FILE_ID).Width(20).Hidden();
            columns.Bound(c => c.FILENAME).Width(45);
            columns.Bound(c => c.UPLOAD_SUMMARY).Width(50);
            columns.Bound(c => c.UPLOAD_NAME).Width(30);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("Download", "Document") + "?file_id=#=FILE_ID#'><span class=\"k-icon k-update\"></span>Κατέβασμα</a>"
            ).Width(20);
        })
        .DataSource(ds => ds
        .Ajax()
        .Batch(false)
        .PageSize(40)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.FILE_ID);
        })
        .Read(read => read.Action("AitiseisUploads_Read", "Station").Data("data2"))
        )
    )
</div>

<script type="text/javascript">

    function ddlselect(e) {
        var prosklisiId = 0;
        var dataItem = this.dataItem(e.item.index());
        if (dataItem) {
            prosklisiId = dataItem.PROSKLISI_ID;
        }
        if (prosklisiId) {
            $("#Master").data("kendoGrid").dataSource.read({ prosklisiID: prosklisiId });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε πρόσκληση για προβολή των στοιχείων μεταφορτώσεων.")
        }
    };

    function data1() {
        var prosklisiId = $("#ddlprosklisi").data("kendoDropDownList").value();
        if (prosklisiId) {
            return { prosklisiID: prosklisiId };
        }
        else {
            return { prosklisiID: 0 };
        }
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var aitisiID = dataItem.AITISI_ID;

        $("#Child").data("kendoGrid").dataSource.read({ aitisiId: aitisiID });
        $("#Child").css("display", "block");
    }

    function data2() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { aitisiId: dataItem.AITISI_ID };
        }
        else {
            return { aitisiId: 0 };
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Child").data("kendoGrid");
        grid.dataSource.read();
    }

</script>