@using Hermes.DAL;
@using Hermes.Models;


@{
    ViewBag.Title = "Μεταφορτώσεις αρχείων";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string schoolYear = ViewData["schoolYearText"].ToString();
    string protocol = ViewData["prosklisiProtocol"].ToString();
    string displayInfo = schoolYear + ": " + protocol;
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>

<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.11.4/jquery-ui.js" type="text/javascript"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />


@Html.AntiForgeryToken()
<div class="row" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px">
        <font style="color:#00008b;float:left;font-family:'Segoe UI'">
            @Html.Label("", "Μεταφορτωμένα δικαιολογητικά αιτήσεων. Πρόσκληση  " + displayInfo, new { @style = "font-size:16px;font-style:normal" })
        </font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px;background-color:#4682B4;padding:4px 4px 4px 4px">
    <label style="margin-left:5px;font-size:13px;font-weight:bold;color:white">Βρεφονηπιακός σταθμός : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlstation")
        .DataTextField("ΕΠΩΝΥΜΙΑ")
        .DataValueField("ΣΤΑΘΜΟΣ_ΚΩΔ")
        .HtmlAttributes(new { style = "width:260px;font-size:12px;font-weight:bold" })
        .OptionLabel("Επιλογή ...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetStations", "Document"); }); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
    <label style="margin-left:10px;font-size:12px;font-weight:bold;color:white;font-style:italic">Επιλέξτε γραμμή στο άνω πλέγμα για προβολή των αντίστοιχων ανεβασμένων αρχείων.</label>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<UploadsViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.AITISI_ID, (IEnumerable<AITISIS>)ViewData["aitiseis"], "AITISI_ID", "AITISI_PROTOCOL").Width(20);
            columns.Bound(c => c.UPLOAD_DATE).Width(16).Groupable(false);
            columns.Bound(c => c.UPLOAD_NAME).Width(30).Groupable(false);
            columns.Bound(c => c.UPLOAD_SUMMARY).Width(60).Groupable(false);
            columns.Command(command => { command.Custom("\u2716" + " Διαγραφή").Click("deleteRow"); }).Width(26);
        })
        .Groupable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Selectable()
        .Filterable()
        .HtmlAttributes(new { style = "display: block;font-size:13px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(240))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(60)
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.UPLOAD_ID);
            model.Field(p => p.AITISI_ID).DefaultValue(ViewData["defaultAitisi"]);
        })
        .Read(read => read.Action("xUpload_Read", "Document").Data("data1"))
        .Events(events => events.Error("error_handler1"))
        )
        .Events(events => events.Change("change"))
        )
    </div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<UploadsFilesViewModel>()
        .Name("Child")
        .AutoBind(false)
        .HtmlAttributes(new { style = "display: block;font-size:14px" })
        .Navigatable()
        .Filterable()
        .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(220))
        .Columns(columns =>
        {
            columns.Bound(c => c.ID).Width(20).Hidden();
            columns.Bound(c => c.FILENAME).Width(50).Filterable(false);
            columns.Bound(c => c.EXTENSION).Width(15).Filterable(false);
            columns.Bound(c => c.STATION_USER).Width(30).Filterable(false);
            columns.Bound(c => c.SCHOOLYEAR_TEXT).Width(15).Filterable(false);
            columns.Command(command => { command.Destroy(); command.Custom("\u13EB" + " Προβολή").Click("showPDF"); }).Width(34);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("Download", "Document") + "?file_id=#=ID#'><span class=\"k-icon k-update\"></span>Κατέβασμα</a>"
            ).Width(20);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(20)
            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.ID);
            })
            .Read(read => read.Action("UploadFiles_Read", "Document").Data("data2"))
            .Destroy(destroy => destroy.Action("UploadFiles_Destroy", "Document"))
            .Events(events => events.Error("error_handler2"))
        )
        )
</div>

<div id="dialog" style="display: none"></div>


<script type="text/javascript">

    function deleteRow(e) {
        e.preventDefault();
        var grid = this; //Get the grid from which the pop-up is coming
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);
        var uploadID = data.UPLOAD_ID;

        // ------- when column template delete is used --------
        //var grid = $("#Master").data("kendoGrid");
        //var model = grid.dataItem($(e.target).closest("tr"));
        //var row = $(e.target).closest("tr");
        //var uploadID = model.UPLOAD_ID;
        // ----------------------------------------------------

        var text = "Θέλετε να γίνει διαγραφή της εγγραφής;";
        MessageBoxConfirm(text, "Επιβεβαίωση διαγραφής").done(function () {
            grid.removeRow(row);
            $.ajax({
                url: '@Url.Action("xUpload_Delete", "Document")?uploadId=' + uploadID,
                type: 'POST',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    if (out) MessageBoxAlert(out, "Ειδοποίηση");
                    RefreshMasterGrid();
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });
    }

    function ddlselect(e) {
        var stationID = 0;
        var dataItem = this.dataItem(e.item.index());
        if (dataItem) {
            stationID = dataItem.ΣΤΑΘΜΟΣ_ΚΩΔ;
        }
        if (stationID) {
            $("#Master").data("kendoGrid").dataSource.read({ stationId: stationID });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε σταθμό για προβολή των στοιχείων μεταφορτώσεων.")
        }
    };

    function data1() {
        var stationID = $("#ddlstation").data("kendoDropDownList").value();
        if (stationID) {
            return { stationId: stationID };
        }
        else {
            return { stationId: 0 };
        }
    }

    function RefreshGrid(e) {
        var grid = $("#Child").data("kendoGrid");
        grid.dataSource.read();
    }


    function change(e) {
        var dataItem = this.dataItem(this.select());
        var uploadID = dataItem.UPLOAD_ID;

        $("#Child").data("kendoGrid").dataSource.read({ uploadId: uploadID });
        $("#Child").css("display", "block");
    }

    function data2() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { uploadId: dataItem.UPLOAD_ID };
        }
        else {
            return { uploadId: 0 };
        }
    }

    function error_handler1(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Master").data("kendoGrid").dataSource.read();
    }

    function error_handler2(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Child").data("kendoGrid").dataSource.read();
    }

</script>

<script type="text/javascript">

    function showPDF(e) {
        e.preventDefault();
        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);

        var currentDomain = '@Url.Content("~")';
        var url = currentDomain + "Uploads/" + data.STATION_USER + "/" + data.SCHOOLYEAR_TEXT + "/";
        fileName = data.ID + data.EXTENSION;

        $("#dialog").dialog({
            modal: true,
            title: fileName,
            width: 860,
            height: 700,
            buttons: {
                Κλείσιμο: function () {
                    $(this).dialog('close');
                }
            },
            open: function () {
                var object = "<object data=\"{FileName}\" type=\"application/pdf\" width=\"800px\" height=\"600px\">";
                object += "Δεν μπορεί να γίνει προβολή του αρχείου είτε γιατί δεν μεταφορτώθηκε είτε γιατί δεν έχετε εγκατεστημένο PDF Reader.";
                object += "</object>";
                object = object.replace(/{FileName}/g, url + fileName);
                $("#dialog").html(object);
            }
        });
    }

</script>
