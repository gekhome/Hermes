@using Hermes.DAL;
@using Hermes.Models;

@{
    ViewBag.Title = "Μητρώο παιδιών";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string schoolYear = ViewData["schoolYearText"].ToString();
    string protocol = ViewData["prosklisiProtocol"].ToString();
    string displayInfo = schoolYear + ": " + protocol;       
}

<style>
    /* Thick red border */
    hr.thin {
        border-top: 1px solid #909090;
    }
</style>

@Html.AntiForgeryToken()
<div class="row" style="margin:5px 5px 0px 5px; margin-top:10px">
    <div style="margin:5px 20px 5px 20px">
        @*<span style="font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #0026ff;float:left">
            <font style="color:#00008b;font-family:'Segoe UI'">Μητρώο παιδιών για εγγραφή</font>
        </span>*@
        <span style="margin:5px 30px 5px 30px">
            <font style="color:#00008b;float:left;font-family:'Segoe UI'">
                @Html.Label("", "Μητρώο παιδιών για εγγραφή. Πρόσκληση  " + displayInfo, new { @style = "font-size:15px;font-style:normal" })
            </font>
        </span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-primary" style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px">
    @(Html.Kendo().Grid<ChildrenViewModel>()
                .Name("Grid")
                .Columns(columns =>
                {
                    columns.ForeignKey(f => f.PARENTS_ID, (IEnumerable<sqlPARENT_SELECTOR>)ViewData["parents"], "PARENTS_ID", "PARENT_FULLNAME").Width(40);
                    columns.Bound(c => c.AMKA).Width(20).Groupable(false);
                    columns.Bound(c => c.FIRSTNAME).Width(30).Groupable(false);
                    columns.Bound(c => c.LASTNAME).Width(30).Groupable(false);
                    columns.Bound(c => c.BIRTHDATE).Width(20).Filterable(false).Groupable(false);
                    columns.ForeignKey(f => f.GENDER, (IEnumerable<SYS_GENDERS>)ViewData["genders"], "GENDER_ID", "GENDER").Width(20);
                    columns.ForeignKey(f => f.NATIONALITY, (IEnumerable<SYS_NATIONALITIES>)ViewData["nationalities"], "NATIONALITY_ID", "NATIONALITY_TEXT").Width(25);
                    columns.Command(command => { command.Edit(); }).Width(36);
                })
                .Editable(edit => edit.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
                .HtmlAttributes(new { style = "font-size:12px" })
                //.Events(e => e.Edit("onEdited"))
                .Navigatable()
                .Filterable()
                .Groupable()
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(420))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .DataSource(datasource => datasource
                .Ajax()
                .PageSize(60)
                .ServerOperation(true)
                .Model(model =>
                {
                    model.Id(p => p.CHILD_ID);
                    model.Field(p => p.GENDER).DefaultValue(1);
                    model.Field(p => p.NATIONALITY).DefaultValue(1);
                    model.Field(p => p.PARENTS_ID).DefaultValue(ViewData["defaultParent"]);
                })
                .Read(read => read.Action("Children_Read", "Admin"))
                .Update(update => update.Action("Children_Update", "Admin"))
                .Events(events => events.Error("error_handler"))
                ) @* datasource*@
            )
</div>

<script type="text/javascript">

    function onEdited(e) {
        e.container.data().kendoWindow.bind("deactivate", function () { RefreshGrid(e); });
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>