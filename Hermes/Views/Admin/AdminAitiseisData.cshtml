@using Hermes.DAL;
@using Hermes.Models;

@{
    ViewBag.Title = "Αιτήσεις";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    string schoolYear = ViewData["schoolYearText"].ToString();
    string protocol = ViewData["prosklisiProtocol"].ToString();
    string displayInfo = schoolYear + ": " + protocol;       
}

@Html.AntiForgeryToken()
<div class="row" style="margin:5px 5px 5px 5px; margin-top:10px">
    <div style="margin:5px 30px 5px 30px">
        <span style="margin:5px 60px 5px 20px">
            <font style="color:#00008b;float:left;font-family:'Segoe UI'">
                @Html.Label("", "Αιτήσεις εγγραφής-επανεγγραφής Πρόσκλησης  " + displayInfo, new { @style = "font-size:15px;font-style:normal" })
            </font>
        </span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-primary" style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<AitisiViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.AITISI_PROTOCOL).Width(20).Filterable(false)
                .ClientFooterTemplate("Ολικό πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.AITISI_DATE).Width(24).Filterable(false);
            columns.ForeignKey(f => f.CHILD_ID, (IEnumerable<sqlCHILDREN_POPULATOR>)ViewData["children"], "CHILD_ID", "FULLNAME").Width(40);
            columns.ForeignKey(f => f.STATION_ID, (IEnumerable<SYS_STATIONS>)ViewData["stations"], "ΣΤΑΘΜΟΣ_ΚΩΔ", "ΕΠΩΝΥΜΙΑ").Width(34);
            columns.Bound(c => c.RE_REGISTRATION).ClientTemplate("<input type='checkbox' #= RE_REGISTRATION ? checked='checked' : '' # class='chkbx' ></input>").Width(22);
            columns.Command(command => { command.Edit(); command.Custom("\u2716" + " Διαγραφή").Click("deleteRow"); }).Width(34);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a title=\"Έντυπο αίτησης εγγραφής-επανεγγραφής\" class=\"k-button k-button-icontext\" href='" + Url.Action("AitisiPrint", "Admin") + "?aitisiId=#=AITISI_ID#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
            ).Width(18);
        })
        .Editable(edit => edit.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top).DisplayDeleteConfirmation(false))
        .HtmlAttributes(new { style = "font-size:12px" })
        .Navigatable()
        .Filterable()
        .Groupable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(420))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .DataSource(datasource => datasource
        .Ajax()
        .PageSize(60)
        .ServerOperation(true)
        .Model(model =>
        {
            model.Id(p => p.AITISI_ID);
            model.Field(p => p.CHILD_ID).Editable(false);
            model.Field(p => p.STATION_ID).Editable(false);
            model.Field(p => p.AITISI_PROTOCOL).Editable(false);
            model.Field(p => p.AITISI_DATE).Editable(false);
        })
        .Read(read => read.Action("Aitisi_Read", "Admin"))
        .Update(update => update.Action("Aitisi_Update", "Admin"))
        .Events(events => events.Error("error_handler"))
        .Aggregates(a =>
        {
            a.Add(p => p.AITISI_PROTOCOL).Count();
        })
        ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function deleteRow(e) {
        e.preventDefault();
        var grid = this; //Get the grid from which the pop-up is coming
        var row = $(e.currentTarget).closest("tr");
        var data = this.dataItem(row);
        var aitisiID = data.AITISI_ID;

        var text = "Θέλετε να γίνει διαγραφή της εγγραφής;";
        MessageBoxConfirm(text, "Επιβεβαίωση διαγραφής").done(function () {
            grid.removeRow(row);
            $.ajax({
                url: '@Url.Action("Aitisi_Delete", "Admin")?aitisiId=' + aitisiID,
                type: 'POST',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    if (out) MessageBoxAlert(out, "Ειδοποίηση");
                    RefreshGrid();
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });

    }

    function onEdited(e) {
        e.container.data().kendoWindow.bind("deactivate", function () { RefreshGrid(e); });
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Ειδοποίηση");
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>